// Code generated by mockery v1.1.2. DO NOT EDIT.

package mocks

import (
	models "github.com/infinity-oj/server/internal/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// UsersRepository is an autogenerated mock type for the UsersRepository type
type UsersRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: username, hash, salt, email
func (_m *UsersRepository) Create(username string, hash string, salt string, email string) (*models.User, error) {
	ret := _m.Called(username, hash, salt, email)

	var r0 *models.User
	if rf, ok := ret.Get(0).(func(string, string, string, string) *models.User); ok {
		r0 = rf(username, hash, salt, email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string, string) error); ok {
		r1 = rf(username, hash, salt, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// QueryAccount provides a mock function with given fields: username
func (_m *UsersRepository) QueryAccount(username string) (*models.User, error) {
	ret := _m.Called(username)

	var r0 *models.User
	if rf, ok := ret.Get(0).(func(string) *models.User); ok {
		r0 = rf(username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// QueryProfile provides a mock function with given fields: uid
func (_m *UsersRepository) QueryProfile(uid uint64) (*models.Profile, error) {
	ret := _m.Called(uid)

	var r0 *models.Profile
	if rf, ok := ret.Get(0).(func(uint64) *models.Profile); ok {
		r0 = rf(uid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Profile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(uid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAccount provides a mock function with given fields: u
func (_m *UsersRepository) UpdateAccount(u *models.User) error {
	ret := _m.Called(u)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.User) error); ok {
		r0 = rf(u)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateProfile provides a mock function with given fields: p
func (_m *UsersRepository) UpdateProfile(p *models.Profile) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Profile) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

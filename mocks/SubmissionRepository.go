// Code generated by mockery v1.1.2. DO NOT EDIT.

package mocks

import (
	models "github.com/infinity-oj/server/internal/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// SubmissionRepository is an autogenerated mock type for the SubmissionRepository type
type SubmissionRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: submitterID, problemId, userSpace
func (_m *SubmissionRepository) Create(submitterID uint64, problemId string, userSpace string) (*models.Submission, error) {
	ret := _m.Called(submitterID, problemId, userSpace)

	var r0 *models.Submission
	if rf, ok := ret.Get(0).(func(uint64, string, string) *models.Submission); ok {
		r0 = rf(submitterID, problemId, userSpace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Submission)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64, string, string) error); ok {
		r1 = rf(submitterID, problemId, userSpace)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: s
func (_m *SubmissionRepository) Update(s *models.Submission) error {
	ret := _m.Called(s)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Submission) error); ok {
		r0 = rf(s)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
